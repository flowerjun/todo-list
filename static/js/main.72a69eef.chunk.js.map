{"version":3,"sources":["redux/actions/todo.js","redux/actions/ActionTypes.js","redux/selectors/todo.js","utils/index.js","redux/actions/input.js","redux/selectors/input.js","hooks/useInput.js","hooks/useTodo.js","component/Todo/Input.jsx","component/Todo/Item.jsx","component/Todo/List.jsx","component/Svg/index.jsx","component/Todo/Container.jsx","component/App.jsx","redux/reducers/input.js","redux/reducers/todo.js","redux/reducers/index.js","redux/sagas/service/api.js","redux/sagas/todo.js","redux/sagas/index.js","redux/store/index.js","index.jsx"],"names":["fetchTodos","createAction","insertTodo","toggleTodo","deleteTodo","dragTodo","editTodo","selectRootState","state","todo","selectTodo","createSelector","todos","getMinDate","date","Date","getFullYear","getMonth","getDate","setTitle","setText","setDate","selectInput","input","useInput","dispatch","useDispatch","useCallback","inputTitle","inputText","inputDate","useSelector","useTodo","getTodos","key","putTodo","data","arr","id","length","Math","max","map","item","done","removeTodo","changeTodo","draggingTodo","updateTodo","Input","title","text","useState","isExpiredDate","setIsExpiredDate","handleChange","e","target","name","value","className","type","onChange","placeholder","min","onClick","status","getTime","alert","Item","isEdit","setIsEdit","moreView","setMoreView","setInput","stopPropagation","checked","readOnly","expiredDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","formatToParts","reduce","prevVal","currVal","idx","dateFormat","split","line","flag","List","list","setList","useEffect","todoList","useMemo","animation","onEnd","Bell1","height","viewBox","width","xmlns","d","Bell2","fill","Container","isCheck","setIsCheck","checkAlarm","filter","interval","setInterval","clearInterval","expiredList","titles","join","App","handleActions","action","payload","exception","statue","combineReducers","get","JSON","parse","localStorage","getItem","set","setItem","stringify","fetchTodosSaga","insertTodoSaga","putTodos","deleteTodoSaga","toggleTodoSaga","dragTodoSaga","editTodoSaga","todoSaga","a","setTodos","takeLatest","put","call","select","paylaod","all","fork","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72a69eef.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\nimport {\n  FETCH_TODOS,\n  INSERT_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  DRAG_TODO,\n  EDIT_TODO,\n} from './ActionTypes';\n\nexport const fetchTodos = createAction(FETCH_TODOS);\nexport const insertTodo = createAction(INSERT_TODO);\nexport const toggleTodo = createAction(TOGGLE_TODO);\nexport const deleteTodo = createAction(DELETE_TODO);\nexport const dragTodo = createAction(DRAG_TODO);\nexport const editTodo = createAction(EDIT_TODO);","// todo-list input action\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_TEXT = 'SET_TEXT';\nexport const SET_DATE = 'SET_DATE';\n\n// todo list 조회\nexport const FETCH_TODOS = 'FETCH_TODOS';\nexport const TODOS_REQUEST = 'TODOS_REQUEST';\nexport const TODOS_SUCCESS = 'TODOS_SUCCESS';\nexport const TODOS_FAILURE = 'TODOS_FAILURE';\n\n// todo 등록\nexport const INSERT_TODO = 'INSERT_TODO';\nexport const INSERT_TODO_REQUEST = 'INSERT_TODO_REQUEST';\nexport const INSERT_TODO_SUCCESS = 'INSERT_TODO_SUCCESS';\nexport const INSERT_TODO_FAILURE = 'INSERT_TODO_FAILURE';\n\n// todo 체크\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const TOGGLE_TODO_REQUEST = 'TOGGLE_TODO_REQUEST';\nexport const TOGGLE_TODO_SUCCESS = 'TOGGLE_TODO_SUCCESS';\nexport const TOGGLE_TODO_FAILURE = 'TOGGLE_TODO_FAILURE';\n\n// todo 삭제\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const DELETE_TODO_REQUEST = 'DELETE_TODO_REQUEST';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_FAILURE = 'DELETE_TODO_FAILURE';\n\n// todo 드래그\nexport const DRAG_TODO = 'DRAG_TODO';\nexport const DRAG_TODO_REQUEST = 'DRAG_TODO_REQUEST';\nexport const DRAG_TODO_SUCCESS = 'DRAG_TODO_SUCCESS';\nexport const DRAG_TODO_FAILURE = 'DRAG_TODO_FAILURE';\n\n// todo 수정\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const EDIT_TODO_REQUEST = 'EDIT_TODO_REQUEST';\nexport const EDIT_TODO_SUCCESS = 'EDIT_TODO_SUCCESS';\nexport const EDIT_TODO_FAILURE = 'EDIT_TODO_FAILURE';","import { createSelector } from 'reselect';\n\nconst selectRootState = state => state.todo;\n\nexport const selectTodo = createSelector(\n  [selectRootState],\n  todo => todo,\n);\n\nexport const selectTodos = createSelector(\n  [selectRootState],\n  todo => todo.todos,\n)","export const generateId = () =>\n  Math.random()\n    .toString(36)\n    .substring(2) + new Date().getTime().toString(36);\n\nexport const getMaxVal = (arr) => \n  arr.length ? Math.max(...arr.map(item => item.id)) + 1 : 0;\n\nexport const getMinDate = () => {\n  const date = new Date();\n  return `${date.getFullYear()}-${date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() +1}-${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}T00:00`;\n}\n\nexport const dateFormat = (date) => {\n  const expiredDate = new Date(date);\n  const dateTimeFormat = new Intl.DateTimeFormat('ko', { \n    year: 'numeric', \n    month: 'short', \n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  });\n  return dateTimeFormat.formatToParts(expiredDate).reduce((prevVal, currVal, idx) => \n    idx === 0 ? currVal.value : prevVal + currVal.value\n    , '');\n}","import { createAction } from 'redux-actions';\nimport {\n  SET_TITLE,\n  SET_TEXT,\n  SET_DATE,\n} from './ActionTypes';\n\nexport const setTitle = createAction(SET_TITLE);\nexport const setText = createAction(SET_TEXT);\nexport const setDate = createAction(SET_DATE);","import { createSelector } from 'reselect';\n\nconst selectRootState = state => state.input;\n\nexport const selectInput = createSelector(\n  [selectRootState],\n  input => input\n);","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  setTitle as inputTitle,\n  setText as inputText,\n  setDate as inputDate,\n} from '../redux/actions/input';\nimport { selectInput } from '../redux/selectors/input';\n\nconst useInput = () => {\n  const dispatch = useDispatch();\n\n  const setTitle = useCallback(input =>\n    dispatch(\n      inputTitle(input), [dispatch]\n    ), \n    [dispatch]\n  );\n  const setText = useCallback(input => \n    dispatch(\n      inputText(input), [dispatch]\n    ), \n    [dispatch]\n  );\n  const setDate = useCallback(input =>\n    dispatch(\n      inputDate(input), [dispatch]\n    ), \n    [dispatch]\n  );\n\n  return {\n    input: useSelector(selectInput),\n    setTitle,\n    setText,\n    setDate,\n  };\n};\n\nexport default useInput;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  fetchTodos, \n  insertTodo, \n  deleteTodo as removeTodo, \n  toggleTodo as changeTodo, \n  dragTodo as draggingTodo,\n  editTodo as updateTodo,\n} from '../redux/actions/todo';\nimport { selectTodo } from '../redux/selectors/todo';\nimport { getMaxVal } from '../utils';\nimport useInput from './useInput';\n\nconst useTodo = () => {\n  const dispatch = useDispatch();\n  const { todos } = useSelector(selectTodo);\n  const {\n    setTitle, setText, setDate\n  } = useInput();\n  // get todo list\n  const getTodos = useCallback(\n    (key) => \n      dispatch(\n        fetchTodos(key), \n        [dispatch]\n      ),\n    [dispatch]\n  );\n\n  const putTodo = (key, data) => {\n    dispatch(insertTodo({\n      key,\n      todo: {\n        id: getMaxVal(todos) || 0,\n        ...data,\n        done: false,\n      },\n    }));\n    setTitle('');\n    setText('');\n    setDate('');\n  };\n\n  const deleteTodo = (key, id) => dispatch(removeTodo({ key, id, }));\n\n  const toggleTodo = (key, id) => dispatch(changeTodo({ key, id, }));\n\n  const dragTodo = (key, todos) => dispatch(draggingTodo({ key, todos, }));\n\n  const editTodo = (key, id, todo) =>\n    dispatch(updateTodo({\n      key, id, todo\n    }));\n\n  return {\n    todos,\n    getTodos,\n    putTodo,\n    deleteTodo,\n    toggleTodo,\n    dragTodo,\n    editTodo, \n  };\n};\n\nexport default useTodo;\n","import React, { useState } from 'react';\nimport useInput from '../../hooks/useInput';\nimport useTodo from '../../hooks/useTodo';\nimport { getMinDate } from '../../utils';\n\nconst Input = () => {\n  const {\n    input,\n    setTitle,\n    setText,\n    setDate,\n  } = useInput();\n  const { title, text, date } = input;\n  const { putTodo } = useTodo();\n  const [ isExpiredDate, setIsExpiredDate ] = useState(false);\n\n  const handleChange = (e) => {\n    const {\n      name, value,\n    } = e.target;\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'text':\n        setText(value);\n        break;\n      case 'date':\n        setDate(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleInsert = () => {\n    if (!title.length) {\n      alert('제목을 입력해주세요.');\n      return;\n    }\n    if (!text.length) {\n      alert('내용을 입력해주세요.');\n      return;\n    }\n    if (new Date(date).getTime() < new Date().getTime()) {\n      alert('현재시간 보다 이전 시간은 선택할 수 없습니다.');\n      return;\n    }\n    putTodo('todo', input);\n  };\n\n  return (\n    <div className=\"input\">\n      <input \n        type=\"text\"\n        name=\"title\"\n        onChange={handleChange}\n        value={title}\n        placeholder=\"제목을 입력해주세요.(필수)\"\n      />\n      <textarea\n        type=\"text\"\n        name=\"text\"\n        onChange={handleChange}\n        value={text}\n        placeholder=\"내용을 입력해주세요.(필수)\"\n      />\n      {/* <input \n        type=\"text\"\n        name=\"text\"\n        onChange={handleChange}\n        value={text}\n        placeholder=\"내용을 입력해주세요.(필수)\"\n      /> */}\n      {\n        !isExpiredDate ? \n        <button type=\"button\" onClick={\n          () => {\n            setIsExpiredDate(status => !status);\n          }\n        }>\n          마감기한 선택\n        </button> : \n        <input \n          className=\"input_date\"\n          type=\"datetime-local\"\n          name=\"date\"\n          onChange={handleChange}\n          min={getMinDate()}\n          value={date}\n          placeholder=\"마감기한을 선택해주세요.\"\n        />\n      }\n      <div className=\"add-button\" onClick={handleInsert}>Add</div>\n    </div>\n  );\n};\n\nexport default Input;","import React, { useState, Fragment } from 'react';\nimport useTodo from '../../hooks/useTodo';\nimport { dateFormat, getMinDate } from '../../utils';\n\nconst Item = ({id, title, done, text, date}) => {\n  const [ isEdit, setIsEdit ] = useState(false);\n  const [ moreView, setMoreView ] = useState(false);\n  const [ input, setInput ] = useState({\n    title, text, date,\n  });\n  const {\n    deleteTodo,\n    toggleTodo,\n    editTodo,\n  } = useTodo();\n\n  const handleEdit = () => {\n    if (isEdit) {\n      // if (new Date(input.date).getTime() < new Date().getTime()) {\n      //   alert('현재시간 보다 이전 시간은 선택할 수 없습니다.');\n      //   return;\n      // }\n      editTodo('todo', id, input)\n    };\n    setIsEdit(flag => !flag);\n  };\n  \n  const handleChange = (e) => {\n    const {\n      name, value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  }\n\n  const {\n    title: inputTitle,\n    text: inputText,\n    date: inputDate,\n  } = input;\n\n  return (\n    <div className=\"item\" \n      onClick={() => setMoreView(status => !status)}\n    >\n      {!isEdit ? \n        <div className=\"item_chk\">\n          <input type=\"checkbox\" \n            className=\"tick\" \n            onClick={(e) => {\n              e.stopPropagation();\n              toggleTodo('todo', id)\n            }} \n            checked={done} \n            readOnly\n          />\n        </div> : null\n      }\n      <div className={`item_box${isEdit ? ' editing' : ''}`}>\n        <div className=\"text-container\">\n          {\n            !isEdit ? <div className={`title${done ? ' done' : ''}`}>[title] {title}</div> \n            :\n            <>\n              title: \n              <input \n                type=\"text\" \n                name=\"title\" \n                onChange={handleChange} \n                value={inputTitle}\n                placeholder=\"타이틀을 입력해주세요.\"\n              />\n            </>\n          }\n          {\n            !isEdit ? \n            date ? <div className={`date${done ? ' done' : ''}`}>[마감기한] {dateFormat(date)}</div> : null : \n            <>\n              <br />\n              date:\n              <input \n                type=\"datetime-local\" \n                name=\"date\"\n                onChange={handleChange} \n                min={getMinDate()}\n                value={inputDate}\n              />\n            </>\n          }\n          {\n          !isEdit ? \n            <div className={`text${done ? ' done' : ''}${moreView ? ' expand' : ''}`}>[content] {text.split('\\n').map((line, idx) => (<Fragment key={idx}>{line}<br/></Fragment>))}</div>\n            :\n            <>\n              <br />\n              content:\n              <textarea \n                type=\"text\" \n                name=\"text\" \n                onChange={handleChange} \n                value={inputText}\n              />\n            </>\n          }\n        </div>\n        <div className=\"item_btn\">\n          <div className=\"delete\" onClick={() => deleteTodo('todo', id)}>DELETE</div>\n          <div className=\"edit\" onClick={handleEdit}>\n            {\n              !isEdit ? `EDIT` : `SAVE`\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;","import React, { useState, useMemo, useEffect } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport useTodo from '../../hooks/useTodo';\nimport Item from './Item';\n\nconst List = ({ todos, }) => {\n  const { dragTodo } = useTodo();\n  const [ list, setList ] = useState([]);\n\n  useEffect(() => {\n    setList(todos);\n  }, [setList, todos]);\n\n  const handleDragEnd = () => dragTodo('todo', list);\n  const todoList = useMemo(() => {\n    return list.map(todo => (\n      <Item \n        key={todo.id}\n        {...todo}\n      />\n    ))\n  }, [list]);\n\n  // if (list.length) {\n  //   setBell(\n  //     list.length && list\n  //     .filter(todo => todo.date)\n  //     .some(todo => new Date(todo.date).getTime() < new Date().getTime())\n  //   );\n  // }\n  // const test = list.length && list\n  //   .filter(todo => todo.date)\n  //   .some(todo => new Date(todo.date).getTime() < new Date().getTime());\n  \n  // console.log(list.length, test);\n  // setBell(\n  //   list\n  //   .filter(todo => todo.date)\n  //   .some(todo => new Date(todo.date).getTime() < new Date().getTime())\n  // );\n\n  return (\n    <div className=\"list\">\n      <ReactSortable\n        list={list}\n        setList={setList}\n        animation={150}\n        onEnd={handleDragEnd}\n      >\n        {todoList}\n      </ReactSortable>\n    </div>\n  )\n}\n\nexport default List;","import React from 'react';\n\nexport const Bell1 = () => (\n    <svg height=\"20pt\" viewBox=\"-20 0 512 512.00102\" width=\"20pt\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"m426.492188 348.875h-.03125c-14.722657-.007812-23.035157-7.648438-27.792969-25.53125-4.863281-18.289062-5.027344-44.8125-5.199219-72.894531-.207031-34.023438-.441406-72.585938-8.898438-107.074219-1-4.078125-5.121093-6.574219-9.199218-5.574219-4.074219 1-6.570313 5.117188-5.574219 9.195313 8.035156 32.75 8.261719 70.363281 8.464844 103.546875.179687 29.078125.34375 56.542969 5.707031 76.707031 2.332031 8.769531 5.675781 15.976562 9.996094 21.625h-316.855469c4.320313-5.648438 7.664063-12.855469 9.996094-21.625 5.363281-20.164062 5.53125-47.628906 5.707031-76.707031.269531-44.394531.578125-94.710938 18.742188-133.21875 20.445312-43.347657 61-64.421875 123.984374-64.421875 34.589844 0 62.894532 6.5 84.125 19.324218 18.410157 11.117188 31.925782 26.917969 41.320313 48.304688 1.6875 3.84375 6.175781 5.59375 10.019531 3.902344 3.84375-1.6875 5.59375-6.171875 3.90625-10.019532-10.550781-24.015624-26.492187-42.589843-47.382812-55.207031-13.335938-8.054687-28.996094-13.863281-46.832032-17.402343-1.796874-23.347657-21.355468-41.804688-45.15625-41.804688-23.800781 0-43.363281 18.460938-45.148437 41.8125-17.015625 3.371094-32.058594 8.804688-44.96875 16.285156-20.773437 12.039063-36.796875 29.785156-47.625 52.738282-19.59375 41.542968-19.914063 93.644531-20.191406 139.613281-.171875 28.082031-.332031 54.605469-5.199219 72.894531-4.757812 17.882812-13.070312 25.523438-27.792969 25.53125h-.03125c-24.582031 0-44.582031 20-44.582031 44.585938 0 24.582031 20 44.582031 44.582031 44.582031h48.128907c4.199218 0 7.605468-3.40625 7.605468-7.605469s-3.40625-7.601562-7.605468-7.601562h-48.128907c-16.195312 0-29.375-13.179688-29.375-29.375 0-16.195313 13.175781-29.371094 29.371094-29.375h.003906.027344 381.851563.027343.007813c16.191406.003906 29.367187 13.179687 29.367187 29.375 0 16.195312-13.179687 29.375-29.375 29.375h-303.359375c-4.199218 0-7.601562 3.402343-7.601562 7.601562s3.402344 7.605469 7.601562 7.605469h31.214844c3.847656 41.421875 38.785156 73.957031 81.195312 73.957031 42.40625 0 77.34375-32.535156 81.191407-73.957031h109.761719c24.582031 0 44.582031-20 44.582031-44.582031 0-24.585938-20-44.585938-44.582031-44.585938zm-190.953126-333.667969c14.5625 0 26.742188 10.402344 29.503907 24.164063-9.335938-1.101563-19.164063-1.675782-29.503907-1.675782-10.339843 0-20.167968.570313-29.5 1.671876 2.761719-13.761719 14.9375-24.160157 29.5-24.160157zm0 481.585938c-34.015624 0-62.121093-25.734375-65.90625-58.75h131.808594c-3.785156 33.015625-31.890625 58.75-65.902344 58.75zm0 0\"/><path d=\"m357.632812 47.722656c.136719.074219 13.675782 7.800782 26.996094 25.75 17.84375 24.039063 26.886719 54.070313 26.886719 89.261719 0 4.199219 3.40625 7.605469 7.605469 7.605469 4.199218 0 7.605468-3.40625 7.605468-7.605469 0-48.445313-16.542968-80.601563-30.421874-99.042969-15.25-20.265625-30.644532-28.910156-31.292969-29.269531-3.667969-2.023437-8.269531-.695313-10.308594 2.960937-2.039063 3.660157-.722656 8.285157 2.929687 10.339844zm0 0\"/><path d=\"m415.003906 50.511719c1.222656.800781 29.96875 20.09375 29.96875 68.632812 0 4.199219 3.40625 7.601563 7.605469 7.601563s7.601563-3.402344 7.601563-7.601563c0-57.25-35.464844-80.480469-36.976563-81.441406-3.527344-2.246094-8.191406-1.207031-10.457031 2.3125-2.265625 3.515625-1.246094 8.210937 2.257812 10.496094zm0 0\"/><path d=\"m51.949219 170.339844c4.199219 0 7.605469-3.40625 7.605469-7.605469 0-35.191406 9.046874-65.222656 26.886718-89.261719 13.238282-17.835937 26.695313-25.578125 26.992188-25.75 3.660156-2.035156 4.988281-6.652344 2.960937-10.320312-2.035156-3.675782-6.660156-5.007813-10.335937-2.980469-.648438.359375-16.042969 9.003906-31.292969 29.269531-13.875 18.441406-30.417969 50.597656-30.417969 99.042969 0 4.199219 3.402344 7.605469 7.601563 7.605469zm0 0\"/><path d=\"m18.496094 126.746094c4.199218 0 7.601562-3.402344 7.601562-7.601563 0-48.5 28.703125-67.804687 29.96875-68.628906 3.515625-2.261719 4.546875-6.945313 2.300782-10.476563-2.253907-3.542968-6.953126-4.585937-10.5-2.332031-1.507813.960938-36.976563 24.1875-36.976563 81.4375 0 4.199219 3.40625 7.601563 7.605469 7.601563zm0 0\"/>\n    </svg>\n  );\n\nexport const Bell2 = () => (\n    <svg height=\"20pt\" viewBox=\"-20 0 512 512.00102\" width=\"20pt\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"m426.492188 356.484375h-381.910157c17.5 0 27.394531-9.15625 33.011719-24.332031 27.167969-73.285156-45.199219-286.851563 157.949219-286.851563 203.144531 0 130.765625 213.566407 157.9375 286.851563 5.625 15.175781 15.523437 24.332031 33.011719 24.332031zm0 0\" fill=\"#f7d360\"/>\n      <path d=\"m463.46875 393.457031c0 20.421875-16.558594 36.976563-36.976562 36.976563h-381.910157c-10.210937 0-19.457031-4.136719-26.148437-10.828125-6.691406-6.691407-10.828125-15.9375-10.828125-26.148438 0-20.417969 16.554687-36.972656 36.976562-36.972656h381.910157c10.210937 0 19.457031 4.136719 26.148437 10.828125s10.828125 15.9375 10.828125 26.144531zm0 0\" fill=\"#e58e13\"/>\n      <path d=\"m393.480469 332.152344h-198.5c-21.398438 0-38.511719-17.714844-37.847657-39.105469 2.796876-90.5-11.636718-246.027344 76.921876-247.738281-243.09375 1.257812-87.699219 311.175781-189.46875 311.175781h381.90625c-17.488282 0-27.386719-9.15625-33.011719-24.332031zm0 0\" fill=\"#e58e13\"/>\n      <path d=\"m463.46875 393.457031c0 20.421875-16.558594 36.976563-36.976562 36.976563h-275.0625c-10.207032 0-19.453126-4.136719-26.144532-10.828125-6.691406-6.691407-10.828125-15.9375-10.828125-26.148438 0-20.417969 16.554688-36.972656 36.972657-36.972656h275.0625c10.210937 0 19.457031 4.136719 26.148437 10.828125s10.828125 15.9375 10.828125 26.144531zm0 0\" fill=\"#f7d360\"/><path d=\"m309.492188 430.433594c0 34.003906-22.945313 62.636718-54.179688 71.285156-6.296875 1.742188-12.925781 2.675781-19.769531 2.675781-40.851563 0-73.960938-33.113281-73.960938-73.960937zm0 0\" fill=\"#e58e13\"/><path d=\"m305.914062 453.246094c-7.613281 23.5-26.675781 41.851562-50.601562 48.472656-15.042969-4.160156-28.160156-12.953125-37.722656-24.746094-7.707032-9.507812-.753906-23.726562 11.484375-23.726562zm0 0\" fill=\"#f7d360\"/><path d=\"m273.125 48.128906c.082031-.933594.113281-1.875.113281-2.828125 0-20.816406-16.882812-37.695312-37.695312-37.695312-20.828125 0-37.695313 16.878906-37.695313 37.695312 0 .953125.027344 1.894531.109375 2.828125\" fill=\"#e58e13\"/><path d=\"m426.492188 348.875h-.03125c-14.722657-.007812-23.035157-7.648438-27.792969-25.53125-4.863281-18.289062-5.027344-44.8125-5.199219-72.894531-.207031-34.023438-.441406-72.585938-8.898438-107.074219-1-4.078125-5.121093-6.574219-9.199218-5.574219-4.074219 1-6.570313 5.117188-5.574219 9.195313 8.035156 32.75 8.261719 70.363281 8.464844 103.546875.179687 29.078125.34375 56.542969 5.707031 76.707031 2.332031 8.769531 5.675781 15.976562 9.996094 21.625h-316.855469c4.320313-5.648438 7.664063-12.855469 9.996094-21.625 5.363281-20.164062 5.53125-47.628906 5.707031-76.707031.269531-44.394531.578125-94.710938 18.742188-133.21875 20.445312-43.347657 61-64.421875 123.984374-64.421875 34.589844 0 62.894532 6.5 84.125 19.324218 18.410157 11.117188 31.925782 26.917969 41.320313 48.304688 1.6875 3.84375 6.175781 5.59375 10.019531 3.902344 3.84375-1.6875 5.59375-6.171875 3.90625-10.019532-10.550781-24.015624-26.492187-42.589843-47.382812-55.207031-13.335938-8.054687-28.996094-13.863281-46.832032-17.402343-1.796874-23.347657-21.355468-41.804688-45.15625-41.804688-23.800781 0-43.363281 18.460938-45.148437 41.8125-17.015625 3.371094-32.058594 8.804688-44.96875 16.285156-20.773437 12.039063-36.796875 29.785156-47.625 52.738282-19.59375 41.542968-19.914063 93.644531-20.191406 139.613281-.171875 28.082031-.332031 54.605469-5.199219 72.894531-4.757812 17.882812-13.070312 25.523438-27.792969 25.53125h-.03125c-24.582031 0-44.582031 20-44.582031 44.585938 0 24.582031 20 44.582031 44.582031 44.582031h48.128907c4.199218 0 7.605468-3.40625 7.605468-7.605469s-3.40625-7.601562-7.605468-7.601562h-48.128907c-16.195312 0-29.375-13.179688-29.375-29.375 0-16.195313 13.175781-29.371094 29.371094-29.375h.003906.027344 381.851563.027343.007813c16.191406.003906 29.367187 13.179687 29.367187 29.375 0 16.195312-13.179687 29.375-29.375 29.375h-303.359375c-4.199218 0-7.601562 3.402343-7.601562 7.601562s3.402344 7.605469 7.601562 7.605469h31.214844c3.847656 41.421875 38.785156 73.957031 81.195312 73.957031 42.40625 0 77.34375-32.535156 81.191407-73.957031h109.761719c24.582031 0 44.582031-20 44.582031-44.582031 0-24.585938-20-44.585938-44.582031-44.585938zm-190.953126-333.667969c14.5625 0 26.742188 10.402344 29.503907 24.164063-9.335938-1.101563-19.164063-1.675782-29.503907-1.675782-10.339843 0-20.167968.570313-29.5 1.671876 2.761719-13.761719 14.9375-24.160157 29.5-24.160157zm0 481.585938c-34.015624 0-62.121093-25.734375-65.90625-58.75h131.808594c-3.785156 33.015625-31.890625 58.75-65.902344 58.75zm0 0\"/><path d=\"m357.632812 47.722656c.136719.074219 13.675782 7.800782 26.996094 25.75 17.84375 24.039063 26.886719 54.070313 26.886719 89.261719 0 4.199219 3.40625 7.605469 7.605469 7.605469 4.199218 0 7.605468-3.40625 7.605468-7.605469 0-48.445313-16.542968-80.601563-30.421874-99.042969-15.25-20.265625-30.644532-28.910156-31.292969-29.269531-3.667969-2.023437-8.269531-.695313-10.308594 2.960937-2.039063 3.660157-.722656 8.285157 2.929687 10.339844zm0 0\"/><path d=\"m415.003906 50.511719c1.222656.800781 29.96875 20.09375 29.96875 68.632812 0 4.199219 3.40625 7.601563 7.605469 7.601563s7.601563-3.402344 7.601563-7.601563c0-57.25-35.464844-80.480469-36.976563-81.441406-3.527344-2.246094-8.191406-1.207031-10.457031 2.3125-2.265625 3.515625-1.246094 8.210937 2.257812 10.496094zm0 0\"/><path d=\"m51.949219 170.339844c4.199219 0 7.605469-3.40625 7.605469-7.605469 0-35.191406 9.046874-65.222656 26.886718-89.261719 13.238282-17.835937 26.695313-25.578125 26.992188-25.75 3.660156-2.035156 4.988281-6.652344 2.960937-10.320312-2.035156-3.675782-6.660156-5.007813-10.335937-2.980469-.648438.359375-16.042969 9.003906-31.292969 29.269531-13.875 18.441406-30.417969 50.597656-30.417969 99.042969 0 4.199219 3.402344 7.605469 7.601563 7.605469zm0 0\"/><path d=\"m18.496094 126.746094c4.199218 0 7.601562-3.402344 7.601562-7.601563 0-48.5 28.703125-67.804687 29.96875-68.628906 3.515625-2.261719 4.546875-6.945313 2.300782-10.476563-2.253907-3.542968-6.953126-4.585937-10.5-2.332031-1.507813.960938-36.976563 24.1875-36.976563 81.4375 0 4.199219 3.40625 7.601563 7.605469 7.601563zm0 0\"/>\n    </svg>\n  );","import React, { useEffect, useState } from 'react';\nimport useTodo from '../../hooks/useTodo';\nimport Input from './Input';\nimport List from './List';\nimport { Bell1, Bell2 } from '../Svg';\n\nconst Container = () => {\n  const [isCheck, setIsCheck ] = useState(false);\n  const {\n    todos,\n    getTodos,\n  } = useTodo();\n\n  useEffect(() => {\n    getTodos();\n  }, [getTodos]);\n\n  const checkAlarm = () => \n    todos.length ? todos\n    .filter(todo => \n      new Date(todo.date).getTime() < new Date().getTime()\n    ) : [];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (checkAlarm().length && !isCheck) {\n        alert('마감기한이 지난 할 일이 있습니다. 확인해주세요.');\n        clearInterval(interval);\n      }\n    }, 1000 * 60);\n\n    return () => {\n      clearInterval(interval);\n    }\n  });\n  \n  const handleClick = () => {\n    const expiredList = checkAlarm();\n    if (!expiredList.length) return;\n    const titles = expiredList.map(todo => todo.title);\n    alert(`타이틀 [${titles.join(',')}] 할 일은 마감기한이 지났습니다.`);\n    setIsCheck(true);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"bell\" onClick={handleClick}>\n        { checkAlarm().length ? !isCheck ? <Bell2/> : <Bell1/> : <Bell1/>}\n      </div>\n      <h1>Todo List</h1>\n      <div className=\"content\">\n        <Input />\n        {todos.length ? <List todos={todos}/> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Container;","import React from 'react';\nimport Container from './Todo/Container';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;","import { handleActions } from 'redux-actions';\nimport {\n  SET_TITLE,\n  SET_TEXT,\n  SET_DATE,\n} from '../actions/ActionTypes';\n\nconst initialState = {\n  title: '',\n  text: '',\n  date: '',\n};\n\nconst setTitle = (state, action) => ({\n  ...state,\n  title: action.payload,\n});\n\nconst setText = (state, action) => ({\n  ...state,\n  text: action.payload,\n});\n\nconst setDate = (state, action) => ({\n  ...state,\n  date: action.payload,\n})\n\nexport default handleActions(\n  {\n    [SET_TITLE]: setTitle,\n    [SET_TEXT]: setText,\n    [SET_DATE]: setDate,\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  TODOS_REQUEST,\n  TODOS_SUCCESS,\n  TODOS_FAILURE,\n  INSERT_TODO_REQUEST,\n  INSERT_TODO_SUCCESS,\n  INSERT_TODO_FAILURE,\n  DELETE_TODO_REQUEST,\n  DELETE_TODO_SUCCESS,\n  DELETE_TODO_FAILURE,\n  TOGGLE_TODO_REQUEST,\n  TOGGLE_TODO_SUCCESS,\n  TOGGLE_TODO_FAILURE,\n  DRAG_TODO_REQUEST,\n  DRAG_TODO_SUCCESS,\n  DRAG_TODO_FAILURE,\n  EDIT_TODO_REQUEST,\n  EDIT_TODO_SUCCESS,\n  EDIT_TODO_FAILURE,\n} from '../actions/ActionTypes';\n\nconst initialState = {\n  todos: [],\n  status: '',\n  exception: null,\n};\n\n// todo list 조회\nconst requestTodos = state => ({\n  ...state,\n  status: 'fetching',\n})\nconst successTodos = (state, action) => ({\n  ...state,\n  todos: [...action.payload],\n  status: 'success',\n});\nconst failureTodos = (state, action) => ({\n  ...state,\n  status: 'error',\n  exception: action.payload,\n});\n\n// todo item 등록\nconst requsetInsertTodo = state => ({\n  ...state,\n  status: 'fetching',\n});\nconst successInsertTodo = (state, action) => {\n  const { todo } = action.payload;\n  return {\n    ...state,\n    todos: [\n      ...state.todos, todo\n    ],\n    status: 'success',\n  }\n};\nconst failureInsertTodo = (state, action) => ({\n  ...state,\n  statue: 'error',\n  exception: action.payload,\n});\n\n// tood item 삭제\nconst requestDeleteTodo = state => ({\n  ...state,\n  statue: 'fetching',\n});\nconst successDeleteTodo = (state, action) => {\n  const { id } = action.payload;\n  return {\n    ...state,\n    todos: [\n      ...state.todos.filter(todo => todo.id !== id),\n    ],\n    status: 'success',\n  }\n};\nconst failureDeleteTodo = (state, action) => ({\n  ...state,\n  statue: 'error',\n  exception: action.payload,\n});\n\n// tood item 토글\nconst requestToggleTodo = state => ({\n  ...state,\n  status: 'request',\n});\nconst successToggleTodo = (state, action) => {\n  const { id } = action.payload;\n  return {\n    ...state,\n    todos: [\n      ...state.todos.map(todo => ({\n        ...todo,\n        done: todo.id === id ? !todo.done : todo.done,\n      }))\n    ]\n  }\n};\nconst failureToggleTodo = (state, action) => ({\n  ...state,\n  status: 'error',\n  exception: action.payload,\n});\n\n// todo item 드래그\nconst requestDragTodo = state => ({\n  ...state,\n  status: 'request',\n});\nconst successDragTodo = (state, action) => {\n  const { payload: { todos }, } = action;\n  return {\n    ...state,\n    todos: todos,\n    status: 'success',\n  }\n};\nconst failureDragTodo = (state, action) => ({\n  ...state,\n  status: 'error',\n  exception: action.payload,\n});\n\n// todo item 수정\nconst requestEditTodo = state => ({\n  ...state,\n  status: 'request',\n});\nconst successEditTodo = (state, action) => {\n  const { payload: { id, todo: { title, text, date, }, }, } = action;\n  return {\n    ...state,\n    todos: [\n      ...state.todos.map(todo => ({\n        ...todo,\n        title: todo.id === id ? title : todo.title,\n        text: todo.id === id ? text : todo.text,\n        date: todo.id === id ? date : todo.date,\n      }))\n    ],\n    status: 'success',\n  }\n};\nconst failureEditTodo = (state, action) => ({\n  ...state,\n  status: 'error',\n  exception: action.payload,\n})\n\nexport default handleActions(\n  {\n    [TODOS_REQUEST]: requestTodos,\n    [TODOS_SUCCESS]: successTodos,\n    [TODOS_FAILURE]: failureTodos,\n    [INSERT_TODO_REQUEST]: requsetInsertTodo,\n    [INSERT_TODO_SUCCESS]: successInsertTodo,\n    [INSERT_TODO_FAILURE]: failureInsertTodo,\n    [DELETE_TODO_REQUEST]: requestDeleteTodo,\n    [DELETE_TODO_SUCCESS]: successDeleteTodo,\n    [DELETE_TODO_FAILURE]: failureDeleteTodo,\n    [TOGGLE_TODO_REQUEST]: requestToggleTodo,\n    [TOGGLE_TODO_SUCCESS]: successToggleTodo,\n    [TOGGLE_TODO_FAILURE]: failureToggleTodo,\n    [DRAG_TODO_REQUEST]: requestDragTodo,\n    [DRAG_TODO_SUCCESS]: successDragTodo,\n    [DRAG_TODO_FAILURE]: failureDragTodo,\n    [EDIT_TODO_REQUEST]: requestEditTodo,\n    [EDIT_TODO_SUCCESS]: successEditTodo,\n    [EDIT_TODO_FAILURE]: failureEditTodo,\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\n\nimport input from './input';\nimport todo from './todo';\n\nexport default combineReducers({\n  input,\n  todo,\n});","export const get = (key = 'todo') => \n  JSON.parse(localStorage.getItem(key) || '[]');\nexport const set = (key = 'todo', value) => \n  localStorage.setItem(key, JSON.stringify(value));","import { put, fork, all, takeLatest, call, select } from 'redux-saga/effects';\nimport { get, set } from '../../redux/sagas/service/api';\nimport * as ActionTypes from '../actions/ActionTypes';\n\nconst getTodos = async (key) => await get(key);\nconst setTodos = async ({key, value}) => await set(key, value);\n\n// search todo list\nfunction* fetchTodosSaga() {\n  yield takeLatest(ActionTypes.FETCH_TODOS, fetchTodos);\n}\nfunction* fetchTodos(action) {\n  const { payload } = action;\n  yield put({\n    type: ActionTypes.TODOS_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.TODOS_SUCCESS,\n      payload: yield call(getTodos, payload) || [],\n    });\n  } catch (e) {\n    yield put({\n      type: ActionTypes.TODOS_FAILURE,\n      payload: e,\n    });\n  }\n}\n\n// insert todo\nfunction* insertTodoSaga() {\n  yield takeLatest(ActionTypes.INSERT_TODO, putTodos);\n}\nfunction* putTodos(action) {\n  const { payload: { key, todo }, } = action;\n  yield put({\n    type: ActionTypes.INSERT_TODO_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.INSERT_TODO_SUCCESS,\n      payload: {\n        todo,\n      },\n    });\n    const { todo: { todos }, } = yield select();\n    yield call(setTodos, {\n      key,\n      value: todos,\n    });\n    // 등록 성공 후 필드 초기화\n  } catch (e) {\n    yield put({\n      type: ActionTypes.INSERT_TODO_FAILURE,\n      payload: e,\n    });\n  }\n}\n\n// delete todo\nfunction* deleteTodoSaga() {\n  yield takeLatest(ActionTypes.DELETE_TODO, removeTodo);\n}\nfunction* removeTodo(action) {\n  const { payload: { key, id }, } = action;\n  yield put({\n    type: ActionTypes.DELETE_TODO_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.DELETE_TODO_SUCCESS,\n      payload: {\n        id,\n      }\n    });\n    const { todo: { todos }, } = yield select();\n    yield call(setTodos, {\n      key,\n      value: todos,\n    });\n  } catch (e) {\n    yield put({\n      type: ActionTypes.DELETE_TODO_FAILURE,\n      payload: e,\n    });\n  }\n}\n\n// toggle todo\nfunction* toggleTodoSaga() {\n  yield takeLatest(ActionTypes.TOGGLE_TODO, toggleTodo);\n}\nfunction* toggleTodo(action) {\n  const { payload: { key, id }, } = action;\n  yield put({\n    type: ActionTypes.TOGGLE_TODO_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.TOGGLE_TODO_SUCCESS,\n      payload: {\n        id,\n      }\n    });\n    const { todo: { todos }, } = yield select();\n    yield call(setTodos, {\n      key,\n      value: todos,\n    });\n  } catch (e) {\n    yield put({\n      type: ActionTypes.TOGGLE_TODO_FAILURE,\n      paylaod: e,\n    });\n  }\n}\n\n// drag todo\nfunction* dragTodoSaga() {\n  yield takeLatest(ActionTypes.DRAG_TODO, dragTodo);\n}\nfunction* dragTodo(action) {\n  const { payload: { key, todos }, } = action;\n  yield put({\n    type: ActionTypes.DRAG_TODO_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.DRAG_TODO_SUCCESS,\n      payload: {\n        todos,\n      },\n    });\n    yield call(setTodos, {\n      key,\n      value: todos,\n    });\n  } catch (e) {\n    yield put({\n      type: ActionTypes.DRAG_TODO_FAILURE,\n      payload: e,\n    })\n  }\n}\n\n// edit todo\nfunction* editTodoSaga() {\n  yield takeLatest(ActionTypes.EDIT_TODO, editTodo);\n}\nfunction* editTodo(action) {\n  const { payload: { key, id, todo }, } = action;\n  yield put({\n    type: ActionTypes.EDIT_TODO_REQUEST,\n  });\n  try {\n    yield put({\n      type: ActionTypes.EDIT_TODO_SUCCESS,\n      payload: {\n        id,\n        todo,\n      },\n    });\n    const { todo: { todos }, } = yield select();\n    yield call(setTodos, {\n      key,\n      value: todos,\n    });\n  } catch (e) {\n    yield put({\n      type: ActionTypes.EDIT_TODO_FAILURE,\n      payload: e,\n    })\n  }\n}\n\nexport function* todoSaga() {\n  yield all([\n    fork(fetchTodosSaga),\n    fork(insertTodoSaga),\n    fork(deleteTodoSaga),\n    fork(toggleTodoSaga),\n    fork(dragTodoSaga),\n    fork(editTodoSaga),\n  ]);\n}","import { all, fork } from 'redux-saga/effects';\nimport { todoSaga } from './todo';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(todoSaga),\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\nconst composeEnhancers = composeWithDevTools({});\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './component/App';\nimport './scss/main.scss';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}